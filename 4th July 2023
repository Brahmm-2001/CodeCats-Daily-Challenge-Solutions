Challenge 1 : https://leetcode.com/problems/kth-largest-element-in-an-array/
Solution :-

class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        priority_queue<int> pq;
        int n = nums.size();
        for(int i=0; i<n; i++) {
            pq.push(nums[i]);
        }
        while(--k){
            pq.pop();
        }
        return pq.top();
    }
};

Challenge 2 : https://leetcode.com/problems/merge-sorted-array/
Solution :-

class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        vector<int> nums3(m+n);
        int i=0, j=0, k=0;
        while(i<m && j<n) {
            if(nums1[i] < nums2[j])
                nums3[k++] = nums1[i++];
            else
                nums3[k++] = nums2[j++];
        }
        for( ; i<m; i++)
            nums3[k++] = nums1[i];
        for( ; j<n; j++)
            nums3[k++] = nums2[j];
        for(int i=0; i<nums3.size(); i++) {
            nums1[i] = nums3[i];
        }
    }
};
