Challenge 1 : https://leetcode.com/problems/maximum-subarray/description/
Solution :-

class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int maxSum = nums[0];
        int sum = 0;
        for(int i=0; i<nums.size(); i++) {
            sum = max(nums[i], sum + nums[i]);
            if(sum > maxSum)
                maxSum = sum;
        }
        return maxSum;
    }
};

Challenge 2 : https://leetcode.com/problems/contains-duplicate/
Solution :-

class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        if(nums.size() < 2)
            return false;
        sort(nums.begin(), nums.end());
        int flag = 0;
        for(int i=0; i<nums.size()-1; i++) {
            if(nums[i] == nums[i+1]) {
                flag = 1;
                break;
            }
        }
        if(flag == 1)
            return true;
        else
            return false;
    }
};
