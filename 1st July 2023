Challemge 1 : https://leetcode.com/problems/remove-duplicates-from-sorted-array/
Solution :-

class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        int j = 1;
        for(int i = 1; i < nums.size(); i++){
            if(nums[i] != nums[i - 1]){
                nums[j] = nums[i];
                j++;
            }
        }
        return j;
    }
};

Challenge 2 : https://leetcode.com/problems/shuffle-the-array/
Solution :-

class Solution {
public:
    vector<int> shuffle(vector<int>& nums, int n) {
        vector<int> nums2(2*n);
        for(int i=0, j=0 ; i < 2*n; i = i + 2)
        {
            nums2[i] = nums[j];
            j++;
        }
        for(int i=1, j=n; i < 2*n; i = i + 2)
        {
            nums2[i] = nums[j];
            j++;
        }
        return nums2;
    }
};
