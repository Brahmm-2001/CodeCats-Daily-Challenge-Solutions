Challenge 1 : https://leetcode.com/problems/destination-city/
Solution :-

class Solution {
public:
    string destCity(vector<vector<string>>& paths) {
        int n = paths.size();
        unordered_map <string, string> SrcDest;
        for(int i=0; i<n; i++)
            SrcDest[paths[i][0]] = paths[i][1];
        for(auto path : SrcDest) {
            if(SrcDest.count(path.second) == 0)
                return path.second;
        }
        return "";
    }
};

Challenge 2 : https://leetcode.com/problems/reverse-prefix-of-word/
Solution :-

class Solution {
public:
    string reversePrefix(string word, char ch) {
        int n = word.length();
        for(int i=0; i<n; i++) {
            if(word[i] == ch) {
                reverse(word.begin(), word.begin()+i+1);
                break;
            }
        }
        return word;
    }
};
